{"version":3,"sources":["components/General/General.js","svg/svgIndex.js","components/MainLayout/TitleLayout/AirplaneButton.js","components/MainLayout/TitleLayout/CoronaTitle.js","components/MainLayout/TitleLayout/HamburgerButton.js","components/MainLayout/TitleLayout/TitleMenu.js","components/MainLayout/TitleLayout/TabMenuList.js","components/MainLayout/TitleLayout/TitleTab.js","components/MainLayout/TitleLayout/TitleLayout.js","components/MainLayout/MainLayoutMenuSection.js","components/const.js","components/MainLayout/SectionAllPerson/PersonTypeList.js","components/MainLayout/SectionAllPerson/SectionAllPerson.js","components/MainLayout/SectionTodayPerson/TodayBottomRolling.js","components/MainLayout/SectionTodayPerson/TodayBottomRollingBox.js","components/MainLayout/SectionTodayPerson/TodayBottomBox.js","components/MainLayout/SectionTodayPerson/SectionTodayBottom.js","components/MainLayout/SectionTodayPerson/TodayLeft.js","components/MainLayout/SectionTodayPerson/ArrowBox.js","components/MainLayout/SectionTodayPerson/TodayRightItemNumber.js","components/MainLayout/SectionTodayPerson/TodayRIghtItemText.js","components/MainLayout/SectionTodayPerson/TodayRightItem.js","components/MainLayout/SectionTodayPerson/TodayRight.js","components/MainLayout/SectionTodayPerson/SectionTodayUpper.js","components/MainLayout/SectionTodayPerson/SectionTodayBox.js","components/MainLayout/SectionTodayPerson/SectionTodayPerson.js","components/MainLayout/SectionChart/Chart.js","components/MainLayout/SectionChart/ChartMenuList.js","components/MainLayout/SectionChart/ChartMenu.js","components/MainLayout/SectionChart/ChartBox.js","components/MainLayout/SectionChart/SectionChart.js","components/MainLayout/SectionAddChart/SectionAddChart.js","components/MainLayout/SectionMap/MapBottom.js","components/MainLayout/SectionMap/TabMap.js","components/MainLayout/SectionMap/TabRegion.js","components/MainLayout/SectionMap/MapUpper.js","components/MainLayout/SectionMap/SectionMap.js","components/MainLayout/FooterLayout/FooterLayout.js","components/MainLayout/MainLayoutWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["General","className","style","position","top","href","Vaccine","id","enableBackground","height","viewBox","width","xmlns","d","KoreaMap","version","x","y","points","Hamburger","Globe","Flag","TitleCorona","transform","fill","Airplane","data-name","AirplaneButton","size","CoronaTitle","HamburgerButton","TitleMenu","TabMenu","menu","svg","TabMenuList","props","map","item","idx","TitleTab","tabMenu","TitleLayout","Menu","MainLayoutMenuSection","personBox","name","number","change","color","PersonTypeBox","type","PersonTypeList","useState","data","setData","a","axios","get","response","stats","cases","deaths","recovered","tests","useEffect","fetchData","box","SectionAllPerson","TodayBottomRolling","TodayBottomRollingBox","TodayBottomBox","SectionTodayBottom","TodayLeft","today","setToday","statsLive","ArrowBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","TodayRightItemNumber","TodayRightItemText","text","TodayRightItem","TodayRight","el","SectionTodayUpper","textCenter","todoayCenter","setTodayCenter","textRight","todoayRight","setTodayRight","updateTodayCenter","yesterday","weekAgo","updateTodayRight","twoWeeksAgo","monthAgo","SectionTodayBox","SectionTodayPerson","Chart","categories","series","updateData","setUpdateData","timeseries","countArr","value","Object","values","key","keys","timeArr","options","chart","title","format","yAxis","xAxis","showLabel","theme","fontFamily","backgroundColor","fontSize","fontWeight","label","ChartMenuItem","ChartMenuList","ChartMenu","ChartBox","SectionChart","SectionAddChart","MapBottom","TabMap","TabRegion","MapUpper","SectionMap","FooterLayout","MainLayoutWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a615bcb0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction General() {\n  const style = {\n    position: 'absolute',\n    top: '-999px',\n  };\n\n  return (\n    <div className=\"gnb\" style={style}>\n      <a href=\"/live/\">실시간</a>\n      <a href=\"/daily/\">일별</a>\n      <a href=\"/rates/\">확진율</a>\n      <a href=\"/world/\">세계</a>\n      <a href=\"/city/0/\">서울</a>\n      <a href=\"/city/8/\">경기</a>\n      <a href=\"/city/1/\">부산</a>\n    </div>\n  );\n}\n\nexport default General;\n","import React from 'react';\n\nconst Vaccine = () => (\n  <svg id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <path d=\"m89.246 507.607c5.857 5.858 15.355 5.858 21.213 0 5.858-5.857 5.858-15.355 0-21.213l-10.607-10.607 78.949-78.949 31.82 31.82c5.857 5.858 15.355 5.859 21.213 0 5.859-5.858 5.858-15.355 0-21.213-5.849-5.849-5.849-15.365-.002-21.211l169.771-169.706c2.814-2.813 4.396-6.629 4.396-10.609v-36.227l16.754-16.806c14.119-14.118 16.642-34.847 8.801-51.228l76.051-76.052c5.858-5.858 5.858-15.355 0-21.213-5.857-5.858-15.355-5.858-21.213 0l-76.07 76.071c-16.723-7.968-37.379-5.049-51.192 8.766l-16.821 16.77h-36.228c-3.979 0-7.796 1.581-10.608 4.396l-169.703 169.769c-5.85 5.85-15.364 5.848-21.214 0-5.857-5.858-15.355-5.858-21.213 0-5.858 5.857-5.858 15.355 0 21.213l31.82 31.82-78.95 78.949-10.607-10.607c-5.856-5.858-15.354-5.858-21.213 0-5.858 5.857-5.858 15.355 0 21.213 11.402 11.402 77.543 77.544 84.853 84.854zm312.295-397.147c5.827 5.827 5.903 15.309-.017 21.229l-10.541 10.574-21.246-21.246 10.59-10.557c5.851-5.849 15.366-5.847 21.214 0zm-89.245 25.54h29.999l33.705 33.706v29.999l-6.248 6.246-10.637-10.637c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l10.633 10.633-21.218 21.21-10.629-10.63c-5.857-5.857-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l10.625 10.625-21.217 21.209-10.622-10.622c-5.857-5.857-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l10.617 10.617-21.217 21.209-63.652-63.652zm-165.311 165.376 10.603-10.606 63.644 63.644-10.609 10.604c-3.67 3.669-6.628 7.862-8.805 12.409-15.419-15.419-52.543-52.543-67.244-67.244 4.547-2.177 8.74-5.135 12.411-8.807zm-10.609 53.036 21.213 21.213-78.949 78.949-21.213-21.213z\"></path>\n    </g>\n  </svg>\n);\n\nconst KoreaMap = () => (\n  <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"324.331 450.063 60 92\" enableBackground=\"new 324.331 450.063 60 92\">\n    <g>\n      <path d=\"M369.18,454.855c-0.021-0.04-0.041-0.081-0.061-0.122c-0.184-0.548-0.467-0.955-0.813-1.219   c-0.041-0.04-0.081-0.061-0.102-0.101c-0.184-0.325-0.102-0.61,0.224-0.893c-0.062-0.265-0.264-0.366-0.65-0.326   c-0.06,0-0.121-0.02-0.161-0.04c-0.225-0.183-0.469-0.285-0.752-0.346c-0.062,0-0.123,0-0.143,0.041   c-0.041,0.02-0.062,0.082-0.082,0.142c-0.021,0.122-0.079,0.264-0.142,0.427c-0.02,0.061-0.061,0.102-0.081,0.143   c-0.203,0.183-0.345,0.466-0.445,0.873c0,0.061-0.022,0.101-0.062,0.101c-0.082,0.061-0.102,0.143-0.082,0.285   c0.041,0.182,0.021,0.325-0.062,0.426c-0.04,0.061-0.061,0.122-0.061,0.183c-0.021,0.366-0.101,0.65-0.264,0.813   c-0.021,0.041-0.061,0.081-0.061,0.122c-0.021,0.06-0.062,0.102-0.081,0.122c-0.224,0.182-0.326,0.264-0.367,0.264   c-0.019,0.041-0.06,0.081-0.101,0.102c-0.06,0.081-0.082,0.183-0.082,0.304c0.022,0.264-0.081,0.427-0.304,0.528   c-0.041,0.02-0.081,0.041-0.122,0.061c-0.061,0.021-0.121,0.041-0.144,0.081c-0.039,0.02-0.06,0.081-0.08,0.142   c-0.02,0.041-0.041,0.061-0.08,0.082c-0.223,0.061-0.387,0.162-0.509,0.325c-0.04,0.041-0.061,0.061-0.101,0.081   c-0.061,0.021-0.122,0.041-0.163,0.082c-0.062,0.02-0.102,0.04-0.142,0.06c-0.224,0.021-0.387,0.102-0.508,0.184   c-0.021,0.04-0.062,0.08-0.062,0.122c-0.04,0.122-0.121,0.203-0.243,0.264c-0.305,0.142-0.549,0.284-0.711,0.406   c-0.143,0.102-0.244,0.243-0.305,0.426c-0.102,0.285-0.243,0.487-0.406,0.609c-0.061,0.04-0.121,0.081-0.162,0.142   c-0.062,0.082-0.122,0.163-0.183,0.244c-0.265,0.366-0.549,0.711-0.874,1.036c-0.021,0.041-0.061,0.061-0.102,0.081   c-0.061,0.021-0.121,0.041-0.162,0.082c-0.244,0.162-0.528,0.243-0.854,0.243c-0.06,0-0.121,0-0.184-0.04   c-0.14-0.061-0.364-0.082-0.628-0.041c-0.305,0.061-0.568,0.123-0.792,0.224c-0.244,0.101-0.487,0.101-0.73-0.041   c-0.062-0.02-0.122-0.041-0.204-0.06c-0.163-0.021-0.365-0.042-0.588-0.082c-0.163,0.04-0.346,0.082-0.528,0.082   c-0.021,0.02-0.061,0.02-0.122,0.04c-0.04,0.02-0.102,0.041-0.102,0.061c-0.041,0.081-0.142,0.101-0.283,0.061   c-0.062-0.041-0.144-0.061-0.225-0.082c-0.305-0.061-0.507-0.021-0.609,0.183c-0.02,0.041-0.02,0.081-0.02,0.102   c0,0.142,0.02,0.284,0.062,0.406c0.061,0.224,0.081,0.468,0.081,0.71c0,0.103,0.02,0.204,0.041,0.305   c0.061,0.244,0.182,0.487,0.346,0.731c0.06,0.061,0.101,0.101,0.161,0.142c0.164,0.122,0.306,0.223,0.406,0.324   c0.265,0.265,0.365,0.63,0.285,1.036c0,0.082,0,0.122,0.04,0.184c0.062,0.102,0.122,0.264,0.122,0.426   c0.021,0.082,0,0.122-0.021,0.183c-0.142,0.223-0.284,0.426-0.446,0.649c-0.163,0.224-0.325,0.407-0.487,0.528   c-0.061,0.041-0.122,0.081-0.163,0.122c-0.061,0.021-0.102,0.061-0.162,0.081c-0.041,0-0.082,0.021-0.102,0   c-0.366-0.06-0.67-0.183-0.955-0.325c-0.345-0.203-0.731-0.264-1.178-0.183c-0.081,0-0.142,0.021-0.223,0.021   c-0.325,0.041-0.67,0.041-1.015,0c-0.062,0-0.122,0-0.203,0c-0.143,0-0.224-0.041-0.244-0.143c0-0.041-0.021-0.081-0.082-0.081   c-0.041-0.021-0.101-0.041-0.162-0.082c-0.082-0.041-0.163-0.081-0.244-0.102c-0.102-0.041-0.182-0.061-0.264-0.101   c-0.183-0.041-0.366-0.082-0.548-0.122c-0.041-0.021-0.102-0.041-0.162-0.082c-0.102-0.041-0.244-0.082-0.427-0.082   c-0.223,0-0.426-0.041-0.629-0.142c-0.041-0.021-0.101-0.061-0.142-0.081c-0.081-0.082-0.203-0.122-0.345-0.163   c-0.183-0.061-0.325-0.122-0.426-0.183c-0.041-0.04-0.102-0.062-0.183-0.062c-0.263-0.02-0.406-0.121-0.365-0.365   c0.02-0.203-0.02-0.365-0.122-0.426c-0.284-0.223-0.487-0.447-0.629-0.67c-0.041-0.041-0.061-0.082-0.061-0.123   c-0.04-0.142-0.162-0.203-0.325-0.162c-0.122,0.02-0.264,0.06-0.426,0.142c-0.061,0.02-0.122,0.04-0.163,0.081   c-0.284,0.203-0.588,0.324-0.934,0.386c-0.041,0.02-0.082,0.02-0.122,0.02c-0.406,0.021-0.629,0.204-0.609,0.548   c0,0.183-0.02,0.346-0.041,0.528c-0.04,0.142-0.061,0.305-0.061,0.447c0-0.042,0-0.082,0-0.082c0-0.02-0.02,0-0.101,0.02   c-0.061,0.184-0.122,0.306-0.203,0.407c-0.041,0.041-0.061,0.081-0.061,0.122c-0.184,0.569-0.508,1.015-0.935,1.32   c-0.04,0.02-0.081,0.061-0.081,0.102c-0.102,0.324-0.244,0.629-0.467,0.873c-0.345,0.447-0.711,0.853-1.077,1.259   c-0.081,0.102-0.162,0.183-0.244,0.264c-0.365,0.325-0.792,0.731-1.279,1.259c-0.223,0.204-0.427,0.366-0.63,0.487   c-0.061,0.041-0.122,0.082-0.163,0.142c-0.04,0.041-0.223,0.143-0.548,0.265c-0.224,0.101-0.386,0.203-0.488,0.284l-0.122,0.122   c-0.061,0.102-0.162,0.183-0.285,0.244c-0.04,0-0.081,0.02-0.122,0.061c-0.264,0.143-0.528,0.325-0.813,0.508   c-0.264,0.203-0.568,0.325-0.914,0.345c-0.061,0.021-0.142,0.021-0.203,0.041c-0.061,0.02-0.122,0.04-0.162,0.081   c-0.244,0.143-0.488,0.325-0.752,0.548c-0.02,0.041-0.061,0.061-0.102,0.081c-0.142,0.061-0.244,0.122-0.305,0.224   c-0.041,0.04-0.061,0.061-0.102,0.061c-0.102,0.041-0.183,0.061-0.224,0.122c-0.182,0.162-0.406,0.284-0.669,0.365   c-0.326,0.102-0.569,0.223-0.731,0.365c-0.021,0.041-0.061,0.061-0.102,0.102c-0.406,0.224-0.771,0.447-1.117,0.609   c-0.06,0.041-0.122,0.082-0.182,0.122c-0.223,0.244-0.447,0.467-0.65,0.67c-0.304,0.346-0.751,0.65-1.299,0.914   c-0.163,0.082-0.325,0.163-0.487,0.244c-0.041,0.02-0.082,0.041-0.122,0.061c-0.061,0.021-0.102,0.041-0.122,0.061   c-0.081,0.122-0.203,0.204-0.386,0.204c-0.061,0.02-0.142,0.02-0.203,0.041c-0.183,0.041-0.305,0.021-0.366-0.061l-0.142,0.102   c-0.081,0.284-0.123,0.569-0.102,0.853l0.305,0.264c0.041,0.02,0.061,0.061,0.081,0.102c0.081,0.223,0.203,0.446,0.345,0.69   c0.122,0.162,0.284,0.243,0.487,0.264c0.081,0,0.142,0.021,0.203,0.041c0.447,0.244,0.711,0.548,0.752,0.934   c0.02,0.021,0,0.061,0,0.102c-0.062,0.224-0.021,0.386,0.122,0.467c0.041,0.021,0.041,0.061,0.041,0.122   c-0.041,0.285-0.142,0.487-0.304,0.609c0.101,0.123,0.264,0.163,0.507,0.163c0.04,0,0.081,0,0.102,0   c0.041,0,0.081-0.021,0.101-0.061c0.224-0.203,0.427-0.345,0.63-0.467c0.061-0.02,0.122-0.041,0.183-0.02   c0.122,0,0.183-0.061,0.204-0.203c0,0,0.04-0.021,0.102,0c0.162,0,0.244,0.101,0.264,0.284c0,0.041,0.02,0.081,0.04,0.102   c0.204,0.203,0.447,0.366,0.731,0.487c0.061,0.021,0.122,0.041,0.183,0.061c0.224,0.061,0.467,0.122,0.711,0.183   c0.142,0.021,0.264,0.061,0.386,0.122c0.142,0.062,0.305,0.122,0.528,0.203c0.041,0,0.061,0.04,0.102,0.082   c0.102,0.142,0.264,0.203,0.508,0.203c0.061-0.02,0.142-0.041,0.223-0.081c0.061-0.021,0.122-0.041,0.183-0.041   c0.183-0.021,0.325,0.021,0.426,0.062c0.061,0.041,0.122,0.041,0.183,0.061c0.162,0,0.224,0.102,0.203,0.285l-0.121,0.162   c-0.102,0.102-0.265,0.244-0.529,0.427c-0.04,0.02-0.04,0.06-0.04,0.122c0.021,0.142,0.061,0.264,0.122,0.406   c0,0.041,0.02,0.082,0.041,0.122c0.081,0.223,0.102,0.507,0.081,0.792c0,0.102-0.041,0.203-0.081,0.285   c-0.163,0.224-0.305,0.447-0.447,0.67c-0.183,0.304-0.345,0.629-0.447,0.974c-0.021,0.102-0.061,0.204-0.082,0.305   c-0.122,0.366-0.264,0.69-0.447,1.016c-0.02,0.04-0.041,0.081-0.081,0.102c-0.285,0.345-0.467,0.669-0.549,1.035   c0,0.021,0,0.061,0.021,0.102c0.163,0.345,0.326,0.629,0.467,0.833c-0.142,0.244-0.284,0.406-0.446,0.467   c-0.204,0.102-0.325,0.305-0.346,0.609c0,0.041,0,0.082-0.02,0.122c-0.061,0.325-0.204,0.528-0.427,0.629   c-0.223,0.102-0.345,0.264-0.366,0.467c0,0.041-0.02,0.082-0.02,0.122c-0.061,0.122-0.101,0.265-0.142,0.386   c-0.143,0.65-0.406,1.178-0.771,1.563c-0.061,0.042-0.102,0.102-0.163,0.143c-0.264,0.304-0.508,0.568-0.711,0.812   c-0.061,0.042-0.101,0.102-0.183,0.122c-0.122,0.082-0.122,0.183,0,0.305c0.203,0.202,0.427,0.325,0.711,0.346   c0.102,0.021,0.203,0.021,0.305,0.021c0.081,0,0.142-0.021,0.202-0.061c0.265-0.144,0.549-0.163,0.833-0.042   c0.062,0.042,0.122,0.042,0.183,0.062c0.264,0.021,0.507,0,0.731-0.04c0.102-0.021,0.183-0.021,0.285,0   c0.101,0.021,0.203,0.04,0.284,0.081c0.081,0.02,0.162,0.08,0.224,0.142c0.101,0.122,0.182,0.223,0.203,0.305   c-0.04,0.121-0.182,0.161-0.406,0.161c-0.062,0-0.122,0-0.204,0c-0.264,0.042-0.528,0.063-0.812,0.082   c-0.021,0.021-0.061,0.041-0.081,0.082c-0.062,0.162-0.142,0.283-0.224,0.386c0.102,0.122,0.264,0.161,0.507,0.161   c0.042,0,0.082,0,0.102,0c0.326,0,0.63,0.061,0.915,0.164c0.122,0.041,0.203,0.081,0.263,0.141   c0.021,0.021,0.082,0.063,0.143,0.082c0.04,0,0.061,0.041,0.101,0.062c0.082,0.12,0.264,0.163,0.507,0.101   c0.386-0.061,0.529,0.063,0.427,0.387c0,0.06-0.041,0.101-0.101,0.142c-0.041,0.021-0.082,0.062-0.122,0.081   c-0.082,0.082-0.224,0.142-0.406,0.163c-0.02,0-0.061,0.02-0.082,0.061c-0.041,0.062-0.081,0.122-0.122,0.183   c0.203,0.121,0.467,0.143,0.813,0.102c0.304-0.039,0.507-0.162,0.649-0.366c0.041-0.06,0.102-0.101,0.143-0.161   c0.142-0.122,0.284-0.184,0.426-0.184c0.264-0.02,0.365-0.184,0.365-0.507c0-0.062,0-0.122,0.041-0.203   c0.041-0.143,0.021-0.224-0.061-0.284c-0.021,0-0.041-0.041-0.062-0.102c-0.02-0.041-0.04-0.082-0.081-0.104   c-0.223-0.16-0.223-0.303-0.061-0.467c0.041-0.04,0.102-0.06,0.163-0.04c0.325,0.021,0.568,0.103,0.751,0.243   c0.041,0.021,0.101,0.062,0.142,0.082c0.163,0.082,0.284,0.182,0.345,0.367c0.061,0.12,0.122,0.304,0.203,0.507   c0.102,0.304,0.366,0.448,0.792,0.468c0.04,0,0.082,0,0.122,0.039c0.122,0.062,0.244,0.164,0.365,0.244   c0.041,0.041,0.102,0.08,0.162,0.142c0.265,0.224,0.589,0.345,0.976,0.345c0.122,0,0.162-0.08,0.122-0.223   c-0.041-0.223,0-0.386,0.081-0.508c0.122,0.184,0.325,0.305,0.609,0.345c0.386,0.041,0.63-0.021,0.772-0.181   c0.365,0.06,0.446,0.283,0.223,0.647c-0.021,0.042-0.041,0.063-0.082,0.063c-0.183,0.04-0.223,0.142-0.142,0.325   c0.02,0.08,0.061,0.161,0.122,0.243c0.041,0.101,0.102,0.183,0.162,0.264c0.062,0.122,0.184,0.202,0.366,0.244   c0.062,0.021,0.142,0.04,0.224,0.06c0.406,0.122,0.649,0.387,0.731,0.834c0.02,0.04,0.02,0.079,0.04,0.121c0,0,0,0-0.02,0   c-0.304,0.062-0.609,0-0.894-0.162c-0.062-0.04-0.102-0.04-0.142,0c-0.062,0.021-0.102,0.081-0.122,0.142   c-0.102,0.224-0.204,0.406-0.326,0.508c0.102,0.122,0.264,0.162,0.508,0.162c0.082,0,0.142,0.021,0.204,0.061   c0.142,0.104,0.304,0.123,0.507,0.104c0.122-0.021,0.162,0.039,0.162,0.182c0.163,0.103,0.285,0.183,0.386,0.265   c0.041,0.021,0.081,0.062,0.142,0.101c0.041,0.021,0.102,0.082,0.143,0.144c0.021,0.04,0.041,0.081,0.061,0.121   c0.102,0.204,0.244,0.406,0.426,0.59c-0.244,0.141-0.508,0.223-0.812,0.223c-0.143,0.021-0.203,0.102-0.163,0.284   c0,0.06,0.041,0.141,0.082,0.183c0.163,0.183,0.345,0.285,0.568,0.324c0.021,0,0.041,0.041,0.041,0.103   c0.02,0.142,0.061,0.264,0.122,0.406c0.102,0.284,0.224,0.548,0.325,0.73c0.041,0.061,0.062,0.123,0.062,0.183   c0.02,0.062,0.04,0.143,0.06,0.225c0.021,0.141-0.021,0.201-0.183,0.201c-0.183-0.02-0.324-0.1-0.447-0.305   c-0.061-0.08-0.183-0.121-0.345-0.08c-0.04,0.021-0.081,0.041-0.102,0.08c-0.142,0.164-0.304,0.123-0.508-0.121   c-0.04-0.06-0.102-0.122-0.142-0.143c-0.061-0.04-0.102-0.04-0.182-0.04c-0.102,0.021-0.203,0.04-0.305,0.061   c-0.102,0.021-0.183,0.04-0.264,0.083c-0.061,0.039-0.122,0.06-0.163,0.101c-0.366,0.304-0.67,0.63-0.955,1.016   c-0.02,0.021-0.061,0.061-0.122,0.081c-0.041,0-0.081,0.021-0.122,0.04c-0.285,0.103-0.467,0.286-0.508,0.529   c-0.041,0.142-0.021,0.243,0.062,0.284c0.04,0.02,0.06,0.061,0.06,0.122c0.021,0.06,0.042,0.142,0.082,0.202   c0.061,0.244,0.123,0.487,0.142,0.731c0.02,0.061,0.02,0.121,0.02,0.183c0,0.04,0,0.081,0.021,0.122   c0.062,0.162,0.143,0.324,0.285,0.447c0.021,0.02,0.081,0.04,0.142,0.04c0.162,0,0.305,0.08,0.406,0.202   c0.041,0.041,0.082,0.063,0.122,0.063c0.204,0.02,0.346,0.142,0.447,0.364c0.041,0.062,0.062,0.122,0.082,0.183   c0,0.04,0.04,0.061,0.081,0.082c0.182,0.121,0.366,0.243,0.548,0.405c0.142,0.569,0.102,1.077-0.122,1.463   c-0.061,0.121-0.061,0.224,0.02,0.324c0.02,0.041,0.062,0.102,0.082,0.162c0,0.042,0.02,0.082,0.06,0.123   c0.183,0.243,0.285,0.508,0.265,0.791c0,0.264,0.061,0.486,0.223,0.65c0.204,0.203,0.265,0.446,0.204,0.771   c-0.041,0.142-0.122,0.264-0.264,0.325c-0.041,0.02-0.081,0.061-0.081,0.102c-0.021,0.06-0.041,0.121-0.081,0.162   c0.101,0.142,0.284,0.264,0.548,0.324c0.386,0.122,0.568,0.325,0.568,0.61c0,0.041-0.02,0.081-0.04,0.121   c-0.122,0.243-0.285,0.346-0.448,0.243c-0.061-0.04-0.101-0.061-0.162-0.08c-0.122,0.02-0.203,0.04-0.244,0.101   c-0.162,0.143-0.243,0.326-0.223,0.528c0,0.042-0.021,0.082-0.041,0.103c-0.102,0.12-0.264,0.161-0.527,0.161   c-0.021,0-0.062,0.021-0.082,0.063c-0.102,0.224-0.142,0.445-0.122,0.688c0.204,0.103,0.407,0.163,0.609,0.163   c0.081,0.224,0.02,0.407-0.183,0.508c-0.285,0.122-0.488,0.346-0.589,0.672c-0.021,0.08-0.041,0.182-0.082,0.283   c-0.041,0.122-0.122,0.224-0.223,0.264c-0.062,0.041-0.102,0.081-0.163,0.121c-0.223,0.265-0.365,0.549-0.427,0.854   c-0.061,0.223-0.04,0.426,0.041,0.589c0.102,0.203,0.223,0.364,0.366,0.467c0.02,0.041,0.041,0.08,0.061,0.142   c0.02,0.203-0.082,0.265-0.325,0.203c-0.143-0.06-0.264-0.141-0.325-0.285c-0.062-0.08-0.143-0.121-0.285-0.101   c-0.305,0-0.508,0.183-0.609,0.487c-0.041,0.082-0.061,0.143-0.102,0.203c-0.082-0.142-0.244-0.203-0.488-0.162   c-0.162,0.041-0.223,0.142-0.182,0.364c0,0.063,0.04,0.144,0.081,0.184c0.122,0.142,0.183,0.284,0.224,0.446   c0,0.061,0,0.123-0.062,0.163c-0.223,0.243-0.446,0.507-0.629,0.772c-0.041,0.039-0.061,0.102-0.081,0.162   c-0.02,0.122-0.122,0.223-0.264,0.325c-0.345,0.223-0.427,0.566-0.244,1.015c0.02,0.061,0.02,0.122,0.04,0.183   c0,0.184-0.021,0.324-0.081,0.427c-0.061,0.142-0.041,0.203,0.061,0.224c0.082,0.02,0.142,0.02,0.204,0.02   c0.365,0,0.629,0.102,0.812,0.265c0.082,0.081,0.143,0.202,0.143,0.386c0.02,0.081,0.02,0.142,0.04,0.223   c0.021,0.244-0.061,0.386-0.264,0.427c-0.041,0.021-0.081,0.041-0.122,0.061c-0.203,0.203-0.386,0.468-0.568,0.772   c-0.02,0.04-0.061,0.061-0.122,0.081c-0.041,0-0.082,0.04-0.122,0.061c-0.122,0.143-0.122,0.243,0,0.325   c0.142,0.062,0.224,0.142,0.284,0.244c0.021,0.041,0.062,0.062,0.122,0.08c0.041,0,0.082,0.021,0.102,0.021   c0.041,0,0.082-0.021,0.122-0.04c0.183-0.104,0.346-0.244,0.447-0.368c0.041-0.04,0.081-0.06,0.143-0.04   c0.466,0.021,0.872-0.08,1.238-0.283c0.062-0.021,0.122-0.041,0.183-0.041c0.446-0.06,0.649-0.304,0.609-0.711   c0.345,0,0.548,0.122,0.629,0.407c0.021,0.161,0,0.244-0.081,0.283c0.041,0.121,0.102,0.204,0.142,0.244   c0.224,0.203,0.528,0.265,0.934,0.244c0.345-0.04,0.69-0.061,1.015-0.104c0.041,0,0.082,0,0.102,0   c0.183-0.02,0.326-0.06,0.426-0.12c0.062-0.021,0.122-0.021,0.184-0.021c0.06,0.021,0.142,0.04,0.202,0.04   c0.163,0.021,0.244-0.08,0.244-0.264c0.021-0.06,0.021-0.143,0.041-0.203c0.021-0.101,0.041-0.203,0.061-0.284   c0-0.081,0.041-0.142,0.102-0.184c0.102-0.101,0.264-0.182,0.467-0.263c0.041-0.021,0.061-0.04,0.081-0.081   c0.142-0.305,0.326-0.589,0.569-0.873c0.04-0.062,0.101-0.102,0.183-0.122c0.264-0.062,0.467-0.163,0.588-0.325   c0,0.143,0.021,0.244,0.062,0.325c0.02,0.061,0.041,0.122,0.041,0.183c-0.021,0.224-0.143,0.365-0.385,0.446   c-0.042,0-0.082,0.041-0.122,0.062c0.182,0.203,0.467,0.284,0.812,0.264c0.143-0.021,0.244,0.021,0.284,0.102   c0,0.04,0.061,0.04,0.102,0.021c0.081-0.021,0.143-0.062,0.203-0.102c0.163-0.203,0.365-0.406,0.609-0.608   c0.122-0.123,0.264-0.184,0.407-0.225c0.061,0,0.101-0.02,0.122-0.061c0.143-0.102,0.143-0.244-0.021-0.365   c-0.162-0.143-0.263-0.325-0.263-0.549c-0.021-0.144,0.061-0.284,0.203-0.387c0.304-0.223,0.568-0.426,0.792-0.628   c0.122,0,0.162,0.061,0.162,0.202c0,0.081,0,0.142,0,0.203c0,0.143,0.021,0.243,0.082,0.346c-0.122,0.223-0.203,0.405-0.223,0.588   c-0.021,0.061,0.02,0.123,0.102,0.163c0.264,0.204,0.487,0.143,0.711-0.163c0.061-0.121,0.244-0.162,0.467-0.081   c0.061,0,0.102,0.021,0.122,0.021c0.122,0.021,0.183-0.04,0.183-0.163c0-0.305,0-0.608,0.021-0.913c0-0.02,0.041-0.062,0.122-0.082   c0.345-0.101,0.67-0.304,0.975-0.547c0.041-0.061,0.102-0.102,0.122-0.184c0.081,0.082,0.122,0.143,0.163,0.223   c0.061,0.123,0.061,0.224-0.021,0.306c-0.285,0.284-0.487,0.549-0.65,0.793c0.223,0.1,0.427,0.223,0.65,0.363   c0.041,0.021,0.102,0.041,0.163,0.041c0.284,0,0.467-0.142,0.588-0.404c0.102-0.244,0.244-0.488,0.386-0.732   c0.082-0.122,0.204-0.203,0.366-0.243s0.304-0.04,0.407,0c0.264-0.081,0.528-0.103,0.771-0.04c0,0,0.041,0.04,0.062,0.101   c0,0.04,0.039,0.061,0.08,0.101c0.08,0.063,0.163,0.163,0.224,0.285c0.04,0.121,0.142,0.162,0.265,0.121   c0.242-0.061,0.364,0,0.407,0.184c0,0.021,0.038,0.021,0.101,0c0.142-0.02,0.264-0.06,0.385-0.122   c0.041-0.04,0.103-0.081,0.163-0.102c0.04-0.04,0.101-0.061,0.142-0.081c0.223-0.062,0.406-0.183,0.528-0.386   c0.081-0.122,0.224-0.163,0.405-0.143c0.041,0,0.082,0,0.102,0c0.042,0,0.082-0.021,0.103-0.062   c0.141-0.141,0.223-0.344,0.264-0.608c0-0.122-0.041-0.184-0.143-0.223c-0.041-0.021-0.082-0.021-0.121-0.041   c-0.143-0.021-0.224,0-0.305,0.061c-0.143,0.143-0.284,0.143-0.406,0.02c-0.101-0.101-0.184-0.242-0.265-0.385   c-0.02-0.062-0.081-0.102-0.162-0.102c-0.122-0.021-0.244-0.04-0.385-0.04c0.121-0.245,0.283-0.428,0.527-0.569   c0.061-0.021,0.121-0.04,0.184-0.04c0.323-0.041,0.607,0,0.851,0.161c0.041,0.021,0.102,0.042,0.164,0.021   c0.142-0.021,0.244,0,0.284,0.102c0.02,0.041,0.061,0.102,0.121,0.143c0.163,0.123,0.346,0.143,0.549,0.041   c0.081-0.041,0.162-0.062,0.264-0.082c0.062-0.021,0.143-0.021,0.202-0.04c0.204,0,0.367-0.041,0.528-0.102   c0.062-0.021,0.123-0.04,0.183-0.062c0.041-0.021,0.062-0.04,0.103-0.081c0.102-0.163,0.264-0.264,0.507-0.325   c0.042-0.02,0.063-0.04,0.082-0.08c0.142-0.265,0.386-0.407,0.732-0.407c0.08-0.121,0.141-0.243,0.181-0.304   c0.124-0.163,0.225-0.346,0.284-0.527c0.042-0.041,0.042-0.104,0.042-0.184c0.021-0.365,0.203-0.63,0.527-0.791   c0.386-0.185,0.589-0.469,0.589-0.834c0.021-0.365,0.122-0.649,0.305-0.813c0.243-0.182,0.345-0.445,0.365-0.813   c0-0.061,0.021-0.12,0.062-0.183c0.081-0.102,0.121-0.243,0.121-0.426c0.021-0.061,0.021-0.123,0.063-0.203   c0.121-0.345,0.283-0.711,0.465-1.137c0.042-0.041,0.063-0.102,0.063-0.184c0.08-0.284,0.142-0.548,0.202-0.812   c0.042-0.164,0.022-0.306-0.04-0.366c-0.062-0.061-0.121-0.102-0.183-0.122c-0.061,0-0.122-0.02-0.184-0.04   c-0.04-0.02-0.08-0.02-0.122-0.02c-0.021,0-0.06,0-0.102,0c-0.324,0.02-0.507-0.083-0.547-0.347c0-0.04-0.021-0.08-0.041-0.121   c-0.081-0.183-0.224-0.244-0.427-0.203c0-0.122,0.021-0.264,0.04-0.387c0-0.08,0.021-0.161,0.041-0.223   c0.062-0.345,0.08-0.649,0.08-0.913c-0.039-0.509-0.061-1.017-0.08-1.523c0-0.305,0.02-0.65,0.062-0.995   c0.019-0.081,0.019-0.143,0.061-0.224c0.101-0.244,0.161-0.527,0.203-0.813c0-0.061,0-0.101-0.042-0.121   c-0.08-0.041-0.1-0.143-0.1-0.285c0.02-0.364-0.021-0.669-0.164-0.913c-0.101-0.163-0.183-0.346-0.264-0.528   c-0.021-0.04-0.04-0.102-0.081-0.163c-0.102-0.183-0.142-0.385-0.12-0.629c0.019-0.062,0.019-0.123,0.019-0.203   c0.041-0.467-0.04-0.895-0.182-1.299c-0.021-0.041-0.041-0.082-0.041-0.123c-0.122-0.304-0.243-0.609-0.366-0.894   c-0.081-0.244-0.202-0.487-0.345-0.75c-0.122-0.204-0.244-0.468-0.325-0.792c-0.203-0.591-0.386-0.956-0.609-1.119   c-0.202-0.14-0.345-0.303-0.467-0.466c-0.062-0.121-0.142-0.243-0.244-0.365c-0.102-0.143-0.223-0.306-0.324-0.467   c-0.325-0.508-0.67-0.995-1.036-1.422c-0.082-0.122-0.162-0.224-0.243-0.346c-0.325-0.468-0.609-0.995-0.854-1.604   c-0.203-0.487-0.427-0.995-0.671-1.544c-0.264-0.528-0.467-1.036-0.669-1.481c-0.021-0.041-0.021-0.082-0.021-0.123   c-0.021-0.163-0.081-0.304-0.163-0.407c-0.183-0.163-0.324-0.445-0.426-0.791c-0.102-0.346-0.203-0.691-0.265-1.036   c0-0.061-0.04-0.122-0.061-0.163c-0.121-0.182-0.243-0.345-0.385-0.528c-0.021-0.041-0.041-0.081-0.103-0.081   c-0.305-0.102-0.568-0.244-0.791-0.346c-0.184-0.102-0.325-0.243-0.468-0.426c-0.183-0.285-0.366-0.508-0.548-0.691   c-0.021-0.02-0.061-0.041-0.102-0.041c-0.183-0.02-0.325-0.081-0.406-0.162c-0.224-0.204-0.426-0.386-0.589-0.528   c-0.101-0.081-0.244-0.163-0.345-0.244c-0.244-0.143-0.427-0.285-0.59-0.447c-0.02-0.02-0.061-0.061-0.061-0.102   c-0.021-0.06-0.062-0.122-0.082-0.142c-0.183-0.183-0.325-0.325-0.467-0.467c-0.021-0.02-0.061-0.061-0.122-0.061   c-0.041-0.021-0.102-0.061-0.122-0.081c-0.061-0.062-0.142-0.102-0.264-0.143c-0.041-0.02-0.061-0.02-0.102-0.041   c-0.122-0.041-0.223-0.061-0.305-0.061l-0.02-0.183c-0.122-0.061-0.244-0.102-0.366-0.183c-0.082-0.021-0.142-0.122-0.163-0.244   c0-0.041-0.02-0.081-0.041-0.121c-0.041-0.102-0.102-0.164-0.163-0.184c-0.102-0.04-0.183-0.122-0.284-0.203   c-0.041-0.082-0.102-0.163-0.163-0.224c-0.082-0.102-0.142-0.244-0.183-0.407c-0.021-0.101-0.062-0.202-0.062-0.304   c-0.02-0.223,0.021-0.426,0.163-0.568c0.183-0.244,0.304-0.507,0.345-0.853c0.021-0.061,0.041-0.122,0.061-0.183   c0.041-0.102,0.102-0.244,0.122-0.427c0-0.02,0-0.061,0-0.101c0-0.061-0.02-0.143-0.02-0.204c-0.02-0.102-0.061-0.203-0.061-0.284   c-0.021-0.041-0.021-0.081-0.041-0.122c-0.02-0.163-0.061-0.345-0.081-0.569c0.061-0.102,0.081-0.203,0.061-0.345   c0-0.061,0-0.102,0.02-0.122c0.122-0.081,0.203-0.203,0.224-0.386c0-0.021,0-0.061,0.02-0.102c0-0.061,0.041-0.121,0.082-0.162   c0.021-0.062,0.061-0.123,0.102-0.163c0.223-0.284,0.426-0.467,0.63-0.609c0.061-0.021,0.101-0.021,0.142-0.041   c0.082-0.02,0.163-0.061,0.264-0.081c0.183-0.061,0.304-0.122,0.406-0.163c0.285-0.142,0.569-0.304,0.833-0.507   c0.102-0.062,0.183-0.142,0.285-0.223c0.202-0.184,0.487-0.264,0.832-0.264c0.345,0.02,0.649-0.061,0.894-0.265   c0.04-0.04,0.101-0.081,0.162-0.122c0.467-0.426,0.996-0.772,1.564-1.076c0.061-0.02,0.102-0.02,0.123-0.02   c0.161-0.02,0.283-0.082,0.405-0.163c0.243-0.203,0.527-0.345,0.812-0.427c0.204-0.04,0.346-0.102,0.427-0.142   c0.102-0.061,0.184-0.122,0.265-0.182c0.04-0.042,0.101-0.082,0.162-0.122c0.365-0.325,0.771-0.772,1.178-1.361   c0.041-0.061,0.08-0.122,0.143-0.162c0.364-0.346,0.751-0.65,1.177-0.955c0.265-0.162,0.508-0.366,0.712-0.61   c0.162-0.162,0.305-0.365,0.427-0.588c0.06-0.102,0.16-0.244,0.323-0.386c0.041-0.061,0.082-0.122,0.143-0.162   c0.162-0.183,0.346-0.366,0.568-0.549c0.204-0.183,0.427-0.366,0.65-0.568c0.264-0.204,0.527-0.366,0.833-0.508   c0.04-0.02,0.081-0.02,0.101-0.02c0.386,0,0.73-0.102,1.016-0.264c0.101-0.061,0.162-0.163,0.183-0.305   c0.021-0.224,0.021-0.467,0.021-0.71c0-0.163,0.021-0.326,0.041-0.488c0.04-0.345,0.061-0.67,0.061-1.036   c0-0.325,0.021-0.67,0.04-1.015c0.021-0.122,0.042-0.264,0.062-0.407c0.041-0.122,0.062-0.264,0.08-0.406   c0.022-0.061,0-0.123-0.019-0.142c-0.062-0.061-0.103-0.142-0.143-0.264c-0.081-0.285-0.183-0.589-0.305-0.914   c-0.102-0.326-0.122-0.649-0.081-0.995c0.02-0.082,0.02-0.163,0.04-0.224s0.041-0.122,0.082-0.142   c0.039-0.062,0.081-0.143,0.142-0.265c0.061-0.162,0.122-0.304,0.203-0.406c0.041-0.061,0.08-0.122,0.142-0.162   c0.223-0.164,0.387-0.427,0.447-0.751c0.021-0.102,0.041-0.184,0.102-0.224c0.142-0.203,0.264-0.426,0.366-0.67   c0.062-0.163,0.101-0.326,0.101-0.528c0.021-0.021,0.021-0.062,0.041-0.102c0.062-0.122,0.122-0.244,0.203-0.407   c0.02-0.061,0.041-0.122,0.061-0.183c0.122-0.183,0.223-0.366,0.367-0.528c0.039-0.061,0.079-0.122,0.12-0.183   c0.103-0.081,0.224-0.162,0.366-0.263c0.284-0.143,0.488-0.286,0.648-0.447c0.062-0.041,0.104-0.102,0.144-0.142   c0.386-0.488,0.791-0.914,1.259-1.3c0.02-0.021,0.061-0.061,0.061-0.102c0.062-0.203,0.122-0.325,0.244-0.405   c0.223-0.163,0.467-0.305,0.689-0.427c0.122-0.061,0.142-0.143,0.082-0.264c-0.061-0.102-0.144-0.244-0.264-0.427   c-0.041-0.061-0.082-0.122-0.144-0.162c-0.08-0.061-0.161-0.122-0.244-0.163c-0.162-0.101-0.222-0.223-0.202-0.365   c0.02-0.082,0.061-0.122,0.103-0.163c0.202-0.081,0.223-0.203,0.041-0.324C369.524,455.302,369.341,455.098,369.18,454.855z\"></path>\n      <path d=\"M340.668,537.79c-0.244,0.163-0.589,0.265-1.015,0.265c-0.062,0-0.122,0.02-0.184,0.061   c-0.202,0.121-0.365,0.244-0.527,0.386l-0.081-0.102c-0.163,0.122-0.325,0.264-0.528,0.427c-0.204,0.142-0.427,0.324-0.67,0.528   c-0.061,0.04-0.102,0.102-0.143,0.162c-0.162,0.203-0.304,0.427-0.406,0.608c0.122,0.103,0.284,0.143,0.507,0.163   c0.082,0,0.142,0.02,0.204,0.061c0.142,0.103,0.243,0.203,0.324,0.285c0.102,0.101,0.265,0.121,0.488,0.061   c0.041,0,0.082,0,0.122-0.02c0.244-0.063,0.447-0.123,0.609-0.164c0.061-0.02,0.122,0,0.183,0.041   c0.305,0.162,0.629,0.203,1.015,0.143c0.041,0,0.081-0.02,0.122-0.04c0.264-0.163,0.568-0.286,0.914-0.387   c0.061-0.021,0.122-0.041,0.183-0.061c0.041-0.02,0.061-0.04,0.101-0.082c0.061-0.102,0.183-0.142,0.305-0.142   c0.447-0.02,0.69-0.203,0.751-0.548c0.041-0.184,0.102-0.305,0.183-0.406c0.061-0.041,0.122-0.081,0.183-0.143   c0.243-0.183,0.345-0.446,0.284-0.792c-0.02-0.183-0.122-0.324-0.244-0.446c-0.062-0.041-0.122-0.081-0.163-0.102   c-0.061-0.041-0.101-0.062-0.163-0.081c-0.04-0.021-0.081-0.021-0.122-0.041c-0.101-0.021-0.203-0.04-0.284-0.061   c-0.081-0.021-0.142-0.021-0.223-0.041c-0.264-0.021-0.487,0.041-0.69,0.183c-0.04,0.021-0.081,0.041-0.122,0.041   c-0.284,0-0.569,0.061-0.792,0.161C340.75,537.729,340.709,537.749,340.668,537.79z\"></path>\n      <g>\n        <polygon points=\"382.021,502.31 381.866,502.31 381.787,502.453 381.787,502.686 381.982,502.79 382.021,502.724     382.139,502.609 382.139,502.453   \"></polygon>\n        <polygon points=\"381.457,502.11 381.308,502.257 381.383,502.351 381.565,502.442 381.7,502.257 381.64,502.11     381.611,502.052 381.576,502.11 381.504,502.11   \"></polygon>\n      </g>\n      <polygon points=\"377.076,502.129 376.967,502.338 377.021,502.49 377.075,502.574 376.966,502.7 376.884,502.812    376.777,502.811 376.722,502.937 376.574,502.935 376.345,502.739 376.266,502.528 376.198,502.528 376.117,502.36    376.199,502.273 376.335,502.18 376.415,502.125 376.551,502.126 376.597,502.195 376.712,502.127 376.779,502.029 376.929,502.03     \"></polygon>\n    </g>\n  </svg>\n);\n\nconst Hamburger = () => (\n  <svg height=\"384pt\" viewBox=\"0 -53 384 384\" width=\"384pt\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"></path>\n    <path d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"></path>\n    <path d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"></path>\n  </svg>\n);\n\nconst Globe = () => (\n  <svg id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <path d=\"m256 512c140.959 0 256-115.049 256-256 0-140.96-115.049-256-256-256-140.959 0-256 115.049-256 256 0 140.96 115.049 256 256 256zm75.947-43.143c14.505-18.535 25.623-40.643 33.974-62.867h58.966c-24.986 28.11-56.854 49.952-92.94 62.867zm115.476-92.857h-71.804c8.852-32.188 14.045-67.876 15.149-105h90.722c-2.528 38.388-14.68 74.185-34.067 105zm0-240c19.387 30.815 31.539 66.612 34.067 105h-90.722c-1.104-37.124-6.297-72.812-15.149-105zm-22.537-30h-58.966c-8.348-22.205-19.465-44.316-33.974-62.857 36.087 12.915 67.955 34.757 92.94 62.857zm-153.886-73.434c29.436 9.977 50.553 44.985 62.631 73.434h-62.631zm0 103.434h73.427c9.538 31.578 15.149 67.403 16.33 105h-89.757zm0 134.99h89.757c-1.181 37.607-6.792 73.432-16.33 105.01h-73.427zm0 135h62.631c-12.098 28.507-33.219 63.476-62.631 73.444zm-183.886.01h58.966c8.348 22.205 19.465 44.316 33.974 62.857-36.087-12.914-67.955-34.757-92.94-62.857zm153.886 73.434c-29.411-9.968-50.531-44.933-62.631-73.434h62.631zm0-103.434h-73.427c-9.538-31.578-15.149-67.403-16.33-105h89.757zm0-135h-89.757c1.181-37.597 6.792-73.422 16.33-105h73.427zm0-208.434v73.434h-62.631c12.099-28.498 33.218-63.465 62.631-73.434zm-60.947 10.577c-14.505 18.535-25.622 40.642-33.974 62.857h-58.965c24.985-28.1 56.853-49.943 92.939-62.857zm-115.476 92.847h71.804c-8.852 32.198-14.045 67.886-15.149 105.01h-90.722c2.528-38.388 14.68-74.185 34.067-105.01zm-34.067 135.01h90.722c1.104 37.124 6.297 72.812 15.149 105h-71.804c-19.387-30.815-31.539-66.612-34.067-105z\"></path>\n    </g>\n  </svg>\n);\n\nconst Flag = () => (\n  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n    <g>\n      <g>\n        <path d=\"M439.463,61.867c-4.616-2.685-10.318-2.685-14.933,0c-17.877,9.918-38.009,15.061-58.453,14.933 c-29.891,0.661-58.793-10.715-80.213-31.573c-24.728-24.205-58.162-37.431-92.757-36.693 c-27.861-0.241-55.101,8.232-77.909,24.235V25.6c0-14.138-11.461-25.6-25.6-25.6c-14.139,0-25.6,11.461-25.6,25.6v460.8 c0,14.138,11.461,25.6,25.6,25.6c14.138,0,25.6-11.461,25.6-25.6V264.533c2.828-0.265,5.522-1.33,7.765-3.072 c20.302-14.951,44.933-22.861,70.144-22.528c29.946-0.688,58.911,10.689,80.384,31.573c24.681,24.17,58.049,37.394,92.587,36.693 c26.469,0.308,52.431-7.266,74.581-21.76c4.74-3.285,7.501-8.742,7.339-14.507V76.8C448.052,70.648,444.791,64.943,439.463,61.867 z\"></path>\n      </g>\n    </g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n    <g></g>\n  </svg>\n);\n\nconst TitleCorona = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1601.004\" height=\"248.776\" viewBox=\"0 0 1601.004 248.776\">\n    <g transform=\"translate(-1072.996 -1309)\">\n      <path\n        d=\"M121.989-41.847a7.541,7.541,0,0,1,2.664.5,7.241,7.241,0,0,1,2.553,1.721L142.08-23.976A61.747,61.747,0,0,1,117.6-4.718Q102.9,1.776,82.806,1.776,64.38,1.776,49.784-4.5A71.465,71.465,0,0,1,25.031-21.812a76.255,76.255,0,0,1-15.6-26.2A96.73,96.73,0,0,1,4-80.919a86.768,86.768,0,0,1,6.216-33.244A77.539,77.539,0,0,1,27.583-140.3a78.355,78.355,0,0,1,26.7-17.094,93.041,93.041,0,0,1,34.3-6.105,87.366,87.366,0,0,1,17.15,1.609,83.82,83.82,0,0,1,15.041,4.44,70.759,70.759,0,0,1,12.876,6.771,62.063,62.063,0,0,1,10.434,8.713l-12.654,16.983a16.111,16.111,0,0,1-2.886,2.831,7.51,7.51,0,0,1-4.662,1.277,8.326,8.326,0,0,1-3.774-.888,41.718,41.718,0,0,1-3.774-2.165q-2-1.276-4.384-2.775a33.643,33.643,0,0,0-5.661-2.775,46.786,46.786,0,0,0-7.659-2.165,52.262,52.262,0,0,0-10.267-.888,46.95,46.95,0,0,0-18.648,3.607A40.886,40.886,0,0,0,55.222-118.6a47.872,47.872,0,0,0-9.435,16.262A63.793,63.793,0,0,0,42.4-80.919,66.6,66.6,0,0,0,45.787-58.83,48.506,48.506,0,0,0,55-42.569,39.1,39.1,0,0,0,68.6-32.523a40.654,40.654,0,0,0,16.65,3.441,79.7,79.7,0,0,0,9.324-.5A38.483,38.483,0,0,0,102.4-31.3a36.2,36.2,0,0,0,6.882-3.163,45.943,45.943,0,0,0,6.6-4.828,13.125,13.125,0,0,1,2.886-1.832A7.562,7.562,0,0,1,121.989-41.847Zm196.8-39.072a86.918,86.918,0,0,1-6.049,32.634A78.654,78.654,0,0,1,295.7-22.034,78.135,78.135,0,0,1,269.23-4.551a90.027,90.027,0,0,1-34.354,6.327,90.449,90.449,0,0,1-34.41-6.327,78.612,78.612,0,0,1-26.585-17.483,78.228,78.228,0,0,1-17.094-26.251,86.918,86.918,0,0,1-6.049-32.634,86.918,86.918,0,0,1,6.049-32.634,77.626,77.626,0,0,1,17.094-26.2,79.033,79.033,0,0,1,26.585-17.427,90.449,90.449,0,0,1,34.41-6.327,89.338,89.338,0,0,1,34.354,6.383A79.237,79.237,0,0,1,295.7-139.638a78.046,78.046,0,0,1,17.038,26.2A86.617,86.617,0,0,1,318.792-80.919Zm-38.406,0a69.925,69.925,0,0,0-3.108-21.59,45.724,45.724,0,0,0-8.936-16.262,38.536,38.536,0,0,0-14.263-10.212,49.09,49.09,0,0,0-19.2-3.552,49.81,49.81,0,0,0-19.37,3.552,38.438,38.438,0,0,0-14.319,10.212,45.724,45.724,0,0,0-8.935,16.262,69.925,69.925,0,0,0-3.108,21.59,70.32,70.32,0,0,0,3.108,21.7,45.724,45.724,0,0,0,8.935,16.262A37.9,37.9,0,0,0,215.507-32.8a50.507,50.507,0,0,0,19.37,3.5,49.776,49.776,0,0,0,19.2-3.5,37.991,37.991,0,0,0,14.263-10.156,45.724,45.724,0,0,0,8.936-16.262A70.321,70.321,0,0,0,280.386-80.919Zm93.906,21.09V0H336.774V-161.727h52.614q17.538,0,29.915,3.608t20.2,10.045a38.021,38.021,0,0,1,11.378,15.207,50.379,50.379,0,0,1,3.552,19.092A51.253,51.253,0,0,1,452.325-98.9a45.04,45.04,0,0,1-6.271,12.931,48.534,48.534,0,0,1-10.212,10.6,54.226,54.226,0,0,1-13.931,7.659,35.266,35.266,0,0,1,7.048,4.662,27.741,27.741,0,0,1,5.717,6.771L469.086,0H435.12q-9.435,0-13.542-7.1L394.716-54.057a11.308,11.308,0,0,0-4.162-4.44,13.929,13.929,0,0,0-6.716-1.332Zm0-25.863h15.1a38.6,38.6,0,0,0,13.043-1.942,23.566,23.566,0,0,0,8.824-5.383,20.5,20.5,0,0,0,4.995-8.048A30.887,30.887,0,0,0,417.8-111q0-10.656-6.937-16.65t-21.479-5.994h-15.1Zm264.18,4.773a86.918,86.918,0,0,1-6.049,32.634,78.654,78.654,0,0,1-17.038,26.251A78.135,78.135,0,0,1,588.911-4.551a90.028,90.028,0,0,1-34.355,6.327,90.449,90.449,0,0,1-34.41-6.327,78.612,78.612,0,0,1-26.585-17.483,78.227,78.227,0,0,1-17.094-26.251,86.918,86.918,0,0,1-6.049-32.634,86.918,86.918,0,0,1,6.049-32.634,77.626,77.626,0,0,1,17.094-26.2,79.033,79.033,0,0,1,26.585-17.427,90.449,90.449,0,0,1,34.41-6.327,89.338,89.338,0,0,1,34.355,6.383,79.237,79.237,0,0,1,26.474,17.482,78.047,78.047,0,0,1,17.038,26.2A86.617,86.617,0,0,1,638.472-80.919Zm-38.406,0a69.926,69.926,0,0,0-3.108-21.59,45.725,45.725,0,0,0-8.935-16.262,38.536,38.536,0,0,0-14.263-10.212,49.09,49.09,0,0,0-19.2-3.552,49.81,49.81,0,0,0-19.369,3.552,38.438,38.438,0,0,0-14.319,10.212,45.723,45.723,0,0,0-8.935,16.262,69.925,69.925,0,0,0-3.108,21.59,70.321,70.321,0,0,0,3.108,21.7,45.723,45.723,0,0,0,8.935,16.262A37.9,37.9,0,0,0,535.187-32.8a50.507,50.507,0,0,0,19.369,3.5,49.776,49.776,0,0,0,19.2-3.5,37.991,37.991,0,0,0,14.263-10.156,45.725,45.725,0,0,0,8.935-16.262A70.321,70.321,0,0,0,600.066-80.919Zm76.146-80.808a31.844,31.844,0,0,1,4.107.222,10.484,10.484,0,0,1,3,.833,10,10,0,0,1,2.553,1.72,29.171,29.171,0,0,1,2.775,3L765.456-58.83q-.444-4.662-.666-9.047t-.222-8.269v-85.581h33.078V0H778.11a18,18,0,0,1-7.326-1.332,15.676,15.676,0,0,1-5.772-4.884l-76.257-96.348q.333,4.218.555,8.27t.222,7.6V0H656.454V-161.727ZM974.8,0H945.72a13.442,13.442,0,0,1-8.047-2.276A11.753,11.753,0,0,1,933.288-8.1L923.742-36.3H862.248L852.7-8.1A12.5,12.5,0,0,1,848.373-2.5,12.468,12.468,0,0,1,840.492,0h-29.3l62.6-161.727H912.2Zm-103.9-61.827h44.178L900.21-106.116q-1.443-4.218-3.385-9.935t-3.83-12.376q-1.776,6.771-3.663,12.543t-3.552,9.99Z\"\n        transform=\"translate(1069 1556)\"\n      ></path>\n      <path\n        d=\"M50.838-29.97h59.94V0H13.32V-161.727H50.838ZM169.608,0h-37.74V-161.727h37.74Zm16.65-161.727H216.45a13.428,13.428,0,0,1,7.992,2.22,12.163,12.163,0,0,1,4.44,5.883l31.3,86.58q2.109,5.661,4.273,12.321t4.052,13.986q1.554-7.326,3.608-13.986t4.051-12.321l31.08-86.58a12.5,12.5,0,0,1,4.329-5.605,12.468,12.468,0,0,1,7.881-2.5h30.414L285.048,0H251.082Zm281.052,0v28.86H400.932v37.74H451.77v27.75H400.932V-28.86H467.31V0H363.192V-161.727Z\"\n        transform=\"translate(2087 1556)\"\n        fill=\"#606fe4\"\n      ></path>\n    </g>\n  </svg>\n);\n\nconst Airplane = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" x=\"0px\" y=\"0px\">\n    <g data-name=\"Layer 53\">\n      <path d=\"M27.66,14.21,5.54,3.15A2,2,0,0,0,2.73,5.53L6,16,2.73,26.47a2,2,0,0,0,1.91,2.59,2,2,0,0,0,.9-.21L27.66,17.79a2,2,0,0,0,0-3.58Zm-23,12.85L7.44,18l8.62-1h8.7ZM16.06,15,7.44,14,4.63,4.94h0L24.76,15Z\"></path>\n    </g>\n  </svg>\n);\n\nexport { Vaccine, KoreaMap, Hamburger, Globe, Flag, Airplane, TitleCorona };\n","import React from 'react';\nimport { Airplane } from '../../../svg/svgIndex';\n\nfunction AirplaneButton() {\n  return (\n    <button className=\"Airplane__Button basic--box\">\n      <div size=\"20\" fill=\"#cfcfcf\" className=\"Airplane__Box Layout__Center--Box flex flex-row\">\n        <Airplane />\n      </div>\n    </button>\n  );\n}\n\nexport default AirplaneButton;\n","import React from 'react';\nimport { TitleCorona } from '../../../svg/svgIndex';\n\nfunction CoronaTitle() {\n  return (\n    <div size=\"16\" className=\"Corona__Title flex-row flex\">\n      <TitleCorona />\n    </div>\n  );\n}\n\nexport default CoronaTitle;\n","import React from 'react';\nimport { Hamburger } from '../../../svg/svgIndex';\n\nfunction HamburgerButton() {\n  return (\n    <button className=\"Hamburger__Button basic--box\">\n      <div size=\"20\" fill=\"#cfcfcf\" className=\"Hamburger__Box flex felx-row Layout__Center--Box\">\n        <Hamburger />\n      </div>\n    </button>\n  );\n}\n\nexport default HamburgerButton;\n","import React from 'react';\nimport AirplaneButton from './AirplaneButton';\nimport CoronaTitle from './CoronaTitle';\nimport HamburgerButton from './HamburgerButton';\n\nfunction TitleMenu() {\n  return (\n    <div className=\"Layout__Title--Menu flex-row flex\">\n      <AirplaneButton />\n      <CoronaTitle />\n      <HamburgerButton />\n    </div>\n  );\n}\n\nexport default TitleMenu;\n","import React from 'react';\n\nfunction TabMenuList(props) {\n  return (\n    <div className=\"Tab__Menu--Box Tab__Flex flex flex-row\">\n      {props.menu.map((item, idx) => (\n        <TabMenu menu={item.menu} svg={item.svg} key={idx} />\n      ))}\n    </div>\n  );\n}\n\nfunction TabMenu({ menu, svg }) {\n  return (\n    <div className=\"Tab__Menu flex flex-row first\">\n      <div size=\"14\" className=\"Tab__svg Layout__item flex-row center\">\n        {svg}\n      </div>\n      <span>{menu} </span>\n    </div>\n  );\n}\n\nexport default TabMenuList;\n","import React from 'react';\nimport TabMenuList from './TabMenuList';\n\nimport { Vaccine, KoreaMap, Globe, Flag } from '../../../svg/svgIndex';\n\nfunction TitleTab() {\n  const tabMenu = [\n    { menu: '국내', svg: <KoreaMap /> },\n    { menu: '세계', svg: <Globe /> },\n    { menu: '백신', svg: <Vaccine /> },\n    { menu: '거리두기', svg: <Flag /> },\n  ];\n\n  return (\n    <div className=\"Layout__Title--Tab flex-row flex Tab__Animation\">\n      <TabMenuList menu={tabMenu} />\n    </div>\n  );\n}\n\nexport default TitleTab;\n","import React from 'react';\nimport TitleMenu from './TitleMenu';\nimport TitleTab from './TitleTab';\n\nfunction TitleLayout() {\n  return (\n    <div className=\"Layout__Title flex flex-column\">\n      <TitleMenu />\n      <TitleTab />\n    </div>\n  );\n}\n\nexport default TitleLayout;\n","import React from 'react';\nimport './MainLayout.scss';\n\nfunction MainLayoutMenuSection(props) {\n  return (\n    <div className=\"MainLayout__MenuSection\">\n      {props.menu.map((menu, idx) => (\n        <Menu menu={menu} key={idx} />\n      ))}\n    </div>\n  );\n}\n\nfunction Menu({ menu }) {\n  return (\n    <div className=\"MainLayout__MenuRow\">\n      <div className=\"Layout__SBox center flex flex-row Layout__item\">{/* svg > g > path */}</div>\n      <span>{menu}</span>\n    </div>\n  );\n}\n\nexport default MainLayoutMenuSection;\n","const personBox = [\n  {\n    name: '확진자',\n    number: 0,\n    change: 0,\n    color: 'rgb(235, 83, 116)',\n  },\n  {\n    name: '사망자',\n    number: 0,\n    change: 0,\n    color: 'rgb(136, 136, 136)',\n  },\n  {\n    name: '완치자',\n    number: 0,\n    change: 0,\n    color: 'rgb(23, 138, 23)',\n  },\n  {\n    name: '검사자',\n    number: 0,\n    change: 0,\n    color: 'rgb(86, 115, 235)',\n  },\n];\n\nexport default personBox;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport personBox from '../../const';\n\nfunction PersonTypeList() {\n  const [data, setData] = useState(personBox);\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.stats;\n    setData([\n      {\n        name: '확진자',\n        number: data.cases[0],\n        change: data.cases[1],\n        color: 'rgb(235, 83, 116)',\n      },\n      {\n        name: '사망자',\n        number: data.deaths[0],\n        change: data.deaths[1],\n        color: 'rgb(136, 136, 136)',\n      },\n      {\n        name: '완치자',\n        number: data.recovered[0],\n        change: data.recovered[1],\n        color: 'rgb(23, 138, 23)',\n      },\n      {\n        name: '검사자',\n        number: data.tests[0],\n        change: data.tests[1],\n        color: 'rgb(86, 115, 235)',\n      },\n    ]);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Person__Type__List flex-row center\">\n      {data.map((box, idx) => (\n        <PersonTypeBox //\n          type={box.name}\n          number={box.number}\n          change={box.change}\n          color={box.color}\n          key={idx}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction PersonTypeBox({ type, number, change, color }) {\n  const style = {\n    color: color,\n  };\n  return (\n    <div className=\"Person__Type__Box flex-column flex center\">\n      <div className=\"Person__Type flex-row flex\">{type}</div>\n      <div className=\"Person__Number flex-row flex\" style={style}>\n        {number}\n      </div>\n      <div className=\"Person__Change flex-row flex\" style={style}>\n        {change}\n      </div>\n    </div>\n  );\n}\n\nexport default PersonTypeList;\n","import React from 'react';\nimport PersonTypeList from './PersonTypeList';\n\nfunction SectionAllPerson() {\n  return (\n    <div className=\"Section__All__Person\">\n      <PersonTypeList />\n    </div>\n  );\n}\n\nexport default SectionAllPerson;\n","import React from 'react';\n\nfunction TodayBottomRolling() {\n    return (\n        <div className=\"Today__Bottom__Rolling\">\n            <div className=\"rolling--box flex-row\">\n                <div className=\"rolling--info\">\n\n                </div>\n                <div className=\"rolling--arrow\">\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TodayBottomRolling;","import React from 'react';\nimport TodayBottomRolling from './TodayBottomRolling';\n\nfunction TodayBottomRollingBox() {\n    return (\n        <div className=\"Today__Bottom__Rolling__Box\">\n            <TodayBottomRolling />\n        </div>\n    )\n}\n\nexport default TodayBottomRollingBox;","import React from 'react';\nimport TodayBottomRollingBox from './TodayBottomRollingBox';\n\nfunction TodayBottomBox() {\n    return (\n        <div className=\"Today__Bottom__Box flex-row\">\n            <TodayBottomRollingBox />\n        </div>\n    )\n}\n\nexport default TodayBottomBox;","import React from 'react';\nimport TodayBottomBox from './TodayBottomBox';\n\nfunction SectionTodayBottom() {\n    return (\n    <div className=\"Section__Today__Bottom section__stretch section__animation flex-column flex\">\n        <TodayBottomBox />\n    </div>\n    )\n}\n\nexport default SectionTodayBottom;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction TodayLeft() {\n  const [today, setToday] = useState(0);\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.statsLive;\n    setToday(data.today);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Today__Left section__spacebetween flex-column\">\n      <div className=\"Today__Left__Text flex-row\">오늘 확진자수</div>\n      <div className=\"Today__Left__Number__Box flex-row\">\n        <div className=\"Today__Left__Number flex-row\">\n          {today}\n          <span>명</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodayLeft;\n","import React from 'react';\n\nfunction ArrowBox() {\n  return (\n    <div className=\"Arrow__Box\">\n      <div className=\"arrow--bottom\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 12H6m6-7l-7 7 7 7\"></path>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default ArrowBox;\n","import React from 'react';\nimport ArrowBox from './ArrowBox';\n\nfunction TodayRightItemNumber(props) {\n  return (\n    <div className=\"Today__Right__Item__Number flex-row\">\n      <div className=\"changed--number number--background flex-row\">\n        {props.number}\n        <div className=\"space\"></div>\n        <ArrowBox />\n      </div>\n    </div>\n  );\n}\n\nexport default TodayRightItemNumber;\n","import React from 'react';\n\nfunction TodayRightItemText(props) {\n  return (\n    <div className=\"Today__Right__Item__Text flex-row\">\n      <div>{props.text} </div>\n    </div>\n  );\n}\n\nexport default TodayRightItemText;\n","import React from 'react';\nimport TodayRightItemNumber from './TodayRightItemNumber';\nimport TodayRightItemText from './TodayRIghtItemText';\n\nfunction TodayRightItem(props) {\n  const text = props.text;\n  const number = props.number;\n  return (\n    <div className=\"Today__Right__Item flex-row\">\n      <TodayRightItemText text={text} />\n      <TodayRightItemNumber number={number} />\n    </div>\n  );\n}\n\nexport default TodayRightItem;\n","import React from 'react';\nimport TodayRightItem from './TodayRightItem';\n\nfunction TodayRight(props) {\n  return <div className=\"Today__Right flex-column center\"> {props.text.map((el, idx) => (\n        <TodayRightItem text={el} number={props.number[idx]} key={idx} />\n      ))} </div>;\n}\n\nexport default TodayRight;\n","import React, { useEffect, useState } from 'react';\nimport TodayLeft from './TodayLeft';\nimport TodayRight from './TodayRight';\nimport axios from 'axios';\n\nfunction SectionTodayUpper() {\n  const todayCenterData = {\n    textCenter: ['어제', '1주전'],\n    number: [0, 0],\n  };\n  const todayRightData = {\n    textRight: ['2주전', '1달전'],\n    number: [0, 0],\n  };\n\n  const [todoayCenter, setTodayCenter] = useState(todayCenterData);\n  const [todoayRight, setTodayRight] = useState(todayRightData);\n\n  const { textCenter } = todoayCenter;\n  const { textRight } = todoayRight;\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.statsLive;\n\n    const updateTodayCenter = {\n      textCenter,\n      number: [data.yesterday, data.weekAgo],\n    };\n    const updateTodayRight = {\n      textRight,\n      number: [data.twoWeeksAgo, data.monthAgo],\n    };\n\n    setTodayCenter(updateTodayCenter);\n    setTodayRight(updateTodayRight);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Section__Today__Upper flex-row flex\">\n      <TodayLeft />\n      <TodayRight text={todoayCenter.textCenter} number={todoayCenter.number} />\n      <TodayRight text={todoayRight.textRight} number={todoayRight.number} />\n    </div>\n  );\n}\n\nexport default SectionTodayUpper;\n","import React from 'react';\nimport SectionTodayBottom from './SectionTodayBottom';\nimport SectionTodayUpper from './SectionTodayUpper';\n\nfunction SectionTodayBox() {\n    return (\n    <div className=\"Section__Today__Box\">\n        <SectionTodayUpper />\n        <SectionTodayBottom />\n    </div>\n    )\n}\n\nexport default SectionTodayBox;","import React from 'react';\nimport SectionTodayBox from './SectionTodayBox';\n\nfunction SectionTodayPerson() {\n    return ( \n    <div className=\"Section__Today\">\n        <SectionTodayBox />\n    </div>\n    )\n}\n\nexport default SectionTodayPerson;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart } from '@toast-ui/react-chart';\n\nfunction Chart() {\n  const data = {\n    categories: ['0', '0', '0', '0', '0', '0'],\n    series: [\n      {\n        name: 'today',\n        data: [0, 0, 0, 0, 0, 0],\n      },\n      {\n        name: 'yesterday',\n        data: [0, 0, 0, 0, 0, 0],\n      },\n    ],\n  };\n\n  const options = {\n    chart: {\n      width: 490,\n      height: 400,\n      title: 'Corona Live',\n      format: '1,000',\n    },\n    yAxis: {\n      title: 'count',\n    },\n    xAxis: {\n      title: 'time',\n    },\n    series: {\n      showLabel: true,\n    },\n    theme: {\n      chart: {\n        fontFamily: 'Noto Sans KR',\n        backgroundColor: 'rgb(25, 31, 44)',\n      },\n      title: {\n        fontFamily: 'Noto Sans KR',\n        fontSize: 12,\n        fontWeight: 100,\n        color: '#fff',\n      },\n      xAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        width: 2,\n        color: '#fff',\n      },\n      yAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        width: 2,\n        color: '#fff',\n      },\n    },\n  };\n\n  const [updateData, setUpdateData] = useState(data);\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.timeseries;\n\n    const timeArr = (key) => Object.keys(key);\n    const countArr = (value) => Object.values(value);\n\n    setUpdateData({\n      categories: timeArr(data.today),\n      series: [\n        {\n          name: 'today',\n          data: countArr(data.today),\n        },\n        {\n          name: 'yesterday',\n          data: countArr(data.yesterday),\n        },\n      ],\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Chart\">\n      <LineChart data={updateData} options={options} />\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from 'react';\n\nfunction ChartMenuItem() {\n    return (\n        <div>\n \n        </div>\n    )\n}\n\nfunction ChartMenuList() {\n    return (\n        <div>\n            <ChartMenuItem />\n        </div>\n    )\n}\n\nexport default ChartMenuList;","import React from 'react';\nimport ChartMenuList from './ChartMenuList';\n\nfunction ChartMenu() {\n    return (\n        <div className=\"Chart__Menu\">\n            <div className=\"Chart__Menu__Box\">\n                <ChartMenuList />\n            </div>\n        </div>\n    )\n}\n\nexport default ChartMenu;","import React from 'react';\nimport Chart from './Chart';\nimport ChartMenu from './ChartMenu';\n\nfunction ChartBox() {\n    return (\n    <div className=\"Chart__Box flex-column\">\n        <ChartMenu />\n        <Chart />\n    </div>\n    )\n}\n\nexport default ChartBox;","import React from 'react';\nimport ChartBox from './ChartBox';\n\nfunction SectionChart() {\n  return (\n    <div className=\"Section__Chart\">\n      <ChartBox />\n    </div>\n  );\n}\n\nexport default SectionChart;\n","import React from 'react';\n\nfunction SectionAddChart() {\n    return (\n    <div className=\"Section__Add__Chart flex-row\">\n        <div className=\"Add__Chart__Box flex-row\">\n            <div className=\"plus--button flex-row\">\n            <svg height=\"426.66667pt\" viewBox=\"0 0 426.66667 426.66667\" width=\"426.66667pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"></path></svg>\n            </div>\n            <strong>그래프</strong>추가\n        </div>\n    </div>\n    )\n}\n\nexport default SectionAddChart;","import React from 'react';\n\nfunction MapBottom() {\n    return <div className=\"Map__Bottom\">\n\t\t\t\n\t\t</div>;\n}\n\nexport default MapBottom;","import React from 'react';\n\nfunction TabMap() {\n    return (\n    <div className=\"Tab__Map\">\n       \n    </div>\n    )\n}\n\nexport default TabMap;","import React from 'react';\n\nfunction TabRegion() {\n    return (\n    <div className=\"Tab__Region\">\n        \n    </div>\n    )\n}\n\nexport default TabRegion;","import React from 'react';\nimport TabMap from './TabMap';\nimport TabRegion from './TabRegion';\n\nfunction MapUpper() {\n    return (\n    <div className=\"Map__Upper flex-row\">\n        <div className=\"Upper__Menu__Box flex-row\">\n            <TabMap />\n            <TabRegion />\n        </div>\n    </div>\n    )\n}\n\nexport default MapUpper;","import React from 'react';\nimport MapBottom from './MapBottom';\nimport MapUpper from './MapUpper';\n\nfunction SectionMap() {\n    return (\n\t\t<div className=\"Section__Map\">\n\t\t\t<div className=\"map--margin\"></div>\n\t\t\t<MapUpper />\n\t\t\t<MapBottom />\n\t\t</div>\n\t\t)\n}\n\nexport default SectionMap;","import React from 'react';\n\nfunction FooterLayout() {\n    return <div className=\"Layout__Section\"></div>\n}\n\nexport default FooterLayout;","import React from 'react';\nimport TitleLayout from './TitleLayout/TitleLayout';\nimport './MainLayout.scss';\nimport MainLayoutMenuSection from './MainLayoutMenuSection';\nimport SectionAllPerson from './SectionAllPerson/SectionAllPerson';\nimport SectionTodayPerson from './SectionTodayPerson/SectionTodayPerson';\nimport SectionChart from './SectionChart/SectionChart';\nimport SectionAddChart from './SectionAddChart/SectionAddChart';\nimport SectionMap from './SectionMap/SectionMap';\nimport FooterLayout from './FooterLayout/FooterLayout';\n\nfunction MainLayoutWrapper() {\n  const upperBoxMenu = ['국내', '세계', '백신', '거리두기', '자주 묻는 질문'];\n  const bottomBoxMenu = ['다크모드', '제보하기'];\n  return (\n    <div className=\"padding__top MainLayout__Wrapper\">\n      <div className=\"Layout__SBox Layout__SCol MainLayout__MenuContainer\">\n        <MainLayoutMenuSection menu={upperBoxMenu} />\n        <MainLayoutMenuSection menu={bottomBoxMenu} />\n      </div>\n      <div className=\"MainLayout__Main\">\n        <TitleLayout />\n        <SectionAllPerson />\n        <SectionTodayPerson />\n        <SectionChart />\n        <SectionAddChart />\n        <SectionMap />\n        <FooterLayout />\n      </div>\n    </div>\n  );\n}\n\nexport default MainLayoutWrapper;\n","import React from 'react';\nimport General from './components/General/General';\nimport MainLayoutWrapper from './components/MainLayout/MainLayoutWrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <General />\n      <MainLayoutWrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}